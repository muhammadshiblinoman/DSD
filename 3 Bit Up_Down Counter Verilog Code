
module jk_ff(q, qbar, j, k, clk, clr);
  input j, k, clk, clr;
  output q, qbar;
  wire a, b, y, ybar, c, d;

  nand(a, j, clk, clr, qbar);
  nand(b, k, clk, q);
  nand(y, a, ybar);
  nand(ybar, b, y, clr);
  nand(c, y, ~clk);
  nand(d, ybar, ~clk);
  nand(q, c, qbar);
  nand(qbar, d, clr, q);
endmodule


module updowncounter_jk(clk, clr, m, q, qbar);
  input clk, clr, m;
  output [3:0]q;
  output [3:0]qbar;
  wire a1, a2;

  jk_ff jk1(q[0], qbar[0], 1, 1, clk, clr);
  xnor(a1, m, q[0]);
  jk_ff jk2(q[1], qbar[1], 1, 1, a1, clr);
  xnor(a2, q[1], m);
  jk_ff jk3(q[2], qbar[2], 1, 1, a2, clr);
endmodule

module testupdowncounter_jk();
  reg a, b, c;
  wire [3:0] x, y;

  updowncounter_jk up_down(a, b, c, x, y);

  initial a=1;
    always #20 a = ~a;
  initial
    begin
     #0 b=0; c=1;
     #1 b=1;
     #1000 c=0;
    end
endmodule









